// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: checksum.proto

#ifndef PROTOBUF_checksum_2eproto__INCLUDED
#define PROTOBUF_checksum_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_checksum_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsChecksumRequestImpl();
void InitDefaultsChecksumRequest();
void InitDefaultsChecksumResponseImpl();
void InitDefaultsChecksumResponse();
inline void InitDefaults() {
  InitDefaultsChecksumRequest();
  InitDefaultsChecksumResponse();
}
}  // namespace protobuf_checksum_2eproto
namespace tipb {
class ChecksumRequest;
class ChecksumRequestDefaultTypeInternal;
extern ChecksumRequestDefaultTypeInternal _ChecksumRequest_default_instance_;
class ChecksumResponse;
class ChecksumResponseDefaultTypeInternal;
extern ChecksumResponseDefaultTypeInternal _ChecksumResponse_default_instance_;
}  // namespace tipb
namespace tipb {

enum ChecksumScanOn {
  Table = 0,
  Index = 1
};
bool ChecksumScanOn_IsValid(int value);
const ChecksumScanOn ChecksumScanOn_MIN = Table;
const ChecksumScanOn ChecksumScanOn_MAX = Index;
const int ChecksumScanOn_ARRAYSIZE = ChecksumScanOn_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChecksumScanOn_descriptor();
inline const ::std::string& ChecksumScanOn_Name(ChecksumScanOn value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChecksumScanOn_descriptor(), value);
}
inline bool ChecksumScanOn_Parse(
    const ::std::string& name, ChecksumScanOn* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChecksumScanOn>(
    ChecksumScanOn_descriptor(), name, value);
}
enum ChecksumAlgorithm {
  Crc64_Xor = 0
};
bool ChecksumAlgorithm_IsValid(int value);
const ChecksumAlgorithm ChecksumAlgorithm_MIN = Crc64_Xor;
const ChecksumAlgorithm ChecksumAlgorithm_MAX = Crc64_Xor;
const int ChecksumAlgorithm_ARRAYSIZE = ChecksumAlgorithm_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChecksumAlgorithm_descriptor();
inline const ::std::string& ChecksumAlgorithm_Name(ChecksumAlgorithm value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChecksumAlgorithm_descriptor(), value);
}
inline bool ChecksumAlgorithm_Parse(
    const ::std::string& name, ChecksumAlgorithm* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChecksumAlgorithm>(
    ChecksumAlgorithm_descriptor(), name, value);
}
// ===================================================================

class ChecksumRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tipb.ChecksumRequest) */ {
 public:
  ChecksumRequest();
  virtual ~ChecksumRequest();

  ChecksumRequest(const ChecksumRequest& from);

  inline ChecksumRequest& operator=(const ChecksumRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChecksumRequest(ChecksumRequest&& from) noexcept
    : ChecksumRequest() {
    *this = ::std::move(from);
  }

  inline ChecksumRequest& operator=(ChecksumRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChecksumRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChecksumRequest* internal_default_instance() {
    return reinterpret_cast<const ChecksumRequest*>(
               &_ChecksumRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ChecksumRequest* other);
  friend void swap(ChecksumRequest& a, ChecksumRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChecksumRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ChecksumRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChecksumRequest& from);
  void MergeFrom(const ChecksumRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChecksumRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 start_ts = 1;
  bool has_start_ts() const;
  void clear_start_ts();
  static const int kStartTsFieldNumber = 1;
  ::google::protobuf::uint64 start_ts() const;
  void set_start_ts(::google::protobuf::uint64 value);

  // optional .tipb.ChecksumScanOn scan_on = 2;
  bool has_scan_on() const;
  void clear_scan_on();
  static const int kScanOnFieldNumber = 2;
  ::tipb::ChecksumScanOn scan_on() const;
  void set_scan_on(::tipb::ChecksumScanOn value);

  // optional .tipb.ChecksumAlgorithm algorithm = 3;
  bool has_algorithm() const;
  void clear_algorithm();
  static const int kAlgorithmFieldNumber = 3;
  ::tipb::ChecksumAlgorithm algorithm() const;
  void set_algorithm(::tipb::ChecksumAlgorithm value);

  // @@protoc_insertion_point(class_scope:tipb.ChecksumRequest)
 private:
  void set_has_start_ts();
  void clear_has_start_ts();
  void set_has_scan_on();
  void clear_has_scan_on();
  void set_has_algorithm();
  void clear_has_algorithm();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 start_ts_;
  int scan_on_;
  int algorithm_;
  friend struct ::protobuf_checksum_2eproto::TableStruct;
  friend void ::protobuf_checksum_2eproto::InitDefaultsChecksumRequestImpl();
};
// -------------------------------------------------------------------

class ChecksumResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tipb.ChecksumResponse) */ {
 public:
  ChecksumResponse();
  virtual ~ChecksumResponse();

  ChecksumResponse(const ChecksumResponse& from);

  inline ChecksumResponse& operator=(const ChecksumResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChecksumResponse(ChecksumResponse&& from) noexcept
    : ChecksumResponse() {
    *this = ::std::move(from);
  }

  inline ChecksumResponse& operator=(ChecksumResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChecksumResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChecksumResponse* internal_default_instance() {
    return reinterpret_cast<const ChecksumResponse*>(
               &_ChecksumResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ChecksumResponse* other);
  friend void swap(ChecksumResponse& a, ChecksumResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChecksumResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ChecksumResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChecksumResponse& from);
  void MergeFrom(const ChecksumResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChecksumResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 checksum = 1;
  bool has_checksum() const;
  void clear_checksum();
  static const int kChecksumFieldNumber = 1;
  ::google::protobuf::uint64 checksum() const;
  void set_checksum(::google::protobuf::uint64 value);

  // optional uint64 total_kvs = 2;
  bool has_total_kvs() const;
  void clear_total_kvs();
  static const int kTotalKvsFieldNumber = 2;
  ::google::protobuf::uint64 total_kvs() const;
  void set_total_kvs(::google::protobuf::uint64 value);

  // optional uint64 total_bytes = 3;
  bool has_total_bytes() const;
  void clear_total_bytes();
  static const int kTotalBytesFieldNumber = 3;
  ::google::protobuf::uint64 total_bytes() const;
  void set_total_bytes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tipb.ChecksumResponse)
 private:
  void set_has_checksum();
  void clear_has_checksum();
  void set_has_total_kvs();
  void clear_has_total_kvs();
  void set_has_total_bytes();
  void clear_has_total_bytes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 checksum_;
  ::google::protobuf::uint64 total_kvs_;
  ::google::protobuf::uint64 total_bytes_;
  friend struct ::protobuf_checksum_2eproto::TableStruct;
  friend void ::protobuf_checksum_2eproto::InitDefaultsChecksumResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChecksumRequest

// optional uint64 start_ts = 1;
inline bool ChecksumRequest::has_start_ts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChecksumRequest::set_has_start_ts() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChecksumRequest::clear_has_start_ts() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChecksumRequest::clear_start_ts() {
  start_ts_ = GOOGLE_ULONGLONG(0);
  clear_has_start_ts();
}
inline ::google::protobuf::uint64 ChecksumRequest::start_ts() const {
  // @@protoc_insertion_point(field_get:tipb.ChecksumRequest.start_ts)
  return start_ts_;
}
inline void ChecksumRequest::set_start_ts(::google::protobuf::uint64 value) {
  set_has_start_ts();
  start_ts_ = value;
  // @@protoc_insertion_point(field_set:tipb.ChecksumRequest.start_ts)
}

// optional .tipb.ChecksumScanOn scan_on = 2;
inline bool ChecksumRequest::has_scan_on() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChecksumRequest::set_has_scan_on() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChecksumRequest::clear_has_scan_on() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChecksumRequest::clear_scan_on() {
  scan_on_ = 0;
  clear_has_scan_on();
}
inline ::tipb::ChecksumScanOn ChecksumRequest::scan_on() const {
  // @@protoc_insertion_point(field_get:tipb.ChecksumRequest.scan_on)
  return static_cast< ::tipb::ChecksumScanOn >(scan_on_);
}
inline void ChecksumRequest::set_scan_on(::tipb::ChecksumScanOn value) {
  assert(::tipb::ChecksumScanOn_IsValid(value));
  set_has_scan_on();
  scan_on_ = value;
  // @@protoc_insertion_point(field_set:tipb.ChecksumRequest.scan_on)
}

// optional .tipb.ChecksumAlgorithm algorithm = 3;
inline bool ChecksumRequest::has_algorithm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChecksumRequest::set_has_algorithm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChecksumRequest::clear_has_algorithm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChecksumRequest::clear_algorithm() {
  algorithm_ = 0;
  clear_has_algorithm();
}
inline ::tipb::ChecksumAlgorithm ChecksumRequest::algorithm() const {
  // @@protoc_insertion_point(field_get:tipb.ChecksumRequest.algorithm)
  return static_cast< ::tipb::ChecksumAlgorithm >(algorithm_);
}
inline void ChecksumRequest::set_algorithm(::tipb::ChecksumAlgorithm value) {
  assert(::tipb::ChecksumAlgorithm_IsValid(value));
  set_has_algorithm();
  algorithm_ = value;
  // @@protoc_insertion_point(field_set:tipb.ChecksumRequest.algorithm)
}

// -------------------------------------------------------------------

// ChecksumResponse

// optional uint64 checksum = 1;
inline bool ChecksumResponse::has_checksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChecksumResponse::set_has_checksum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChecksumResponse::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChecksumResponse::clear_checksum() {
  checksum_ = GOOGLE_ULONGLONG(0);
  clear_has_checksum();
}
inline ::google::protobuf::uint64 ChecksumResponse::checksum() const {
  // @@protoc_insertion_point(field_get:tipb.ChecksumResponse.checksum)
  return checksum_;
}
inline void ChecksumResponse::set_checksum(::google::protobuf::uint64 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:tipb.ChecksumResponse.checksum)
}

// optional uint64 total_kvs = 2;
inline bool ChecksumResponse::has_total_kvs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChecksumResponse::set_has_total_kvs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChecksumResponse::clear_has_total_kvs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChecksumResponse::clear_total_kvs() {
  total_kvs_ = GOOGLE_ULONGLONG(0);
  clear_has_total_kvs();
}
inline ::google::protobuf::uint64 ChecksumResponse::total_kvs() const {
  // @@protoc_insertion_point(field_get:tipb.ChecksumResponse.total_kvs)
  return total_kvs_;
}
inline void ChecksumResponse::set_total_kvs(::google::protobuf::uint64 value) {
  set_has_total_kvs();
  total_kvs_ = value;
  // @@protoc_insertion_point(field_set:tipb.ChecksumResponse.total_kvs)
}

// optional uint64 total_bytes = 3;
inline bool ChecksumResponse::has_total_bytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChecksumResponse::set_has_total_bytes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChecksumResponse::clear_has_total_bytes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChecksumResponse::clear_total_bytes() {
  total_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes();
}
inline ::google::protobuf::uint64 ChecksumResponse::total_bytes() const {
  // @@protoc_insertion_point(field_get:tipb.ChecksumResponse.total_bytes)
  return total_bytes_;
}
inline void ChecksumResponse::set_total_bytes(::google::protobuf::uint64 value) {
  set_has_total_bytes();
  total_bytes_ = value;
  // @@protoc_insertion_point(field_set:tipb.ChecksumResponse.total_bytes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tipb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tipb::ChecksumScanOn> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tipb::ChecksumScanOn>() {
  return ::tipb::ChecksumScanOn_descriptor();
}
template <> struct is_proto_enum< ::tipb::ChecksumAlgorithm> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tipb::ChecksumAlgorithm>() {
  return ::tipb::ChecksumAlgorithm_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_checksum_2eproto__INCLUDED
